package main

import "testing"

func TestHeap(t *testing.T) {
	/*
		heap包提供了对任意类型（实现了heap.Interface接口）的堆操作。（最小）堆是具有“每个节点都是以其为根的子树中最小值”属性的树。

		树的最小元素为其根元素，索引0的位置。

		heap是常用的实现优先队列的方法。要创建一个优先队列，实现一个具有使用（负的）优先级作为比较的依据的Less方法的Heap接口，
		此一来可用Push添加项目而用Pop取出队列最高优先级的项目。
	*/

}
func TestList(t *testing.T) {
	/*
		list包实现了双向链表。要遍历一个链表：
		双向链表是链表的一种，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。
		所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。一般我们都构造双向循环链表。
	*/

}
func TestRing(t *testing.T) {
	/*
		Ring类型代表环形链表的一个元素，同时也代表链表本身。环形链表没有头尾；
		指向环形链表任一元素的指针都可以作为整个环形链表看待。Ring零值是具有一个（Value字段为nil的）元素的链表。
	*/

}
